sudo: required
dist: xenial
language: python
addons:
  apt:
    sources:
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse'
      - sourceline: 'deb http://mirror.openio.io/pub/repo/openio/sds/18.04/ubuntu/ xenial/'
        key_url: 'http://mirror.openio.io/pub/repo/openio/APT-GPG-KEY-OPENIO-0'
    update: true

env:
  matrix:
    - TEST_SUITE=s3 # Latest stable/supported versions
    - TEST_SUITE=s3 SDS_BRANCH=master  # Integration with latest versions
    - TEST_SUITE=s3 SDS_BRANCH=4.2.x SWIFT_BRANCH=stable/pike # Previous versions
    - TEST_SUITE=encryption
    - TEST_SUITE=encryption SDS_BRANCH=master
    - TEST_SUITE=encryption SDS_BRANCH=4.2.x SWIFT_BRANCH=stable/pike
    - TEST_SUITE=swift
    - TEST_SUITE=swift SDS_BRANCH=4.2.x SWIFT_BRANCH=stable/pike
    - TEST_SUITE=ns-wide-versioning
    - TEST_SUITE=ns-wide-versioning SDS_BRANCH=4.2.x SWIFT_BRANCH=stable/pike
    - TEST_SUITE=unit
    - TEST_SUITE=unit SDS_BRANCH=4.2.x SWIFT_BRANCH=stable/pike

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y --force-yes python-virtualenv jq liberasurecode-dev libssl-dev libattr1-dev libleveldb-dev libzookeeper-mt-dev

install:
  - virtualenv $HOME/venv
  - source $HOME/venv/bin/activate
  - pip install --upgrade pip setuptools virtualenv tox flake8
  - test -n "$SWIFT_BRANCH" && git config --local submodule.third_party/swift.branch "$SWIFT_BRANCH" || true
  - test -n "$SDS_BRANCH" && git config --local submodule.third_party/oio-sds.branch "$SDS_BRANCH" || true
  - git submodule update --init --remote
  - ( grep -v PyECLib third_party/oio-sds/all-requirements.txt ; grep -v eventlet third_party/swift/requirements.txt ) > deps-requirements.txt
  - pip install --upgrade -r deps-requirements.txt
  - cd third_party/oio-sds && python setup.py install && cd ../..
  - cd third_party/swift && python setup.py install && cd ../..
  - cd third_party/swift3 && python setup.py install && cd ../..
  - python setup.py develop
  - pip install --upgrade -r test-requirements.txt
  - go get gopkg.in/ini.v1 gopkg.in/tylerb/graceful.v1

script:
  - set -e
  - flake8 oioswift tests
  - ./tests/run_tests.sh "$TEST_SUITE"

after_success:
  - codecov -X gcov
