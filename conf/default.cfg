[DEFAULT]
bind_port = 5000
user = nobody
log_facility = /dev/log
eventlet_debug = true

# The number of child processes. For optimal performance, consider deploying
# as many workers as there are CPU threads.
workers = 1

# The namespace of your OpenIO-SDS installation
sds_namespace = OPENIO

# A specific URL to join the oio-proxy, your entry point to your OpenIO-SDS
# namespace.
sds_proxy_url = http://127.0.0.1:6000

# Specify the account name for all your contents on your OpenIO-SDS
# installation.
sds_default_account = myaccount

# The timeout (in seconds, float) to establish a connection to a rawx
#sds_connection_timeout=10

# The timeout (in seconds, float) to read a chunk of data from a rawx
# and to read data from the client when uploading
#sds_read_timeout=60

# The timeout (in seconds, float) to write a chunk of data to a rawx
#sds_write_timeout=60

# Python Requests options.
# See http://docs.python-requests.org/en/master/api/#requests.adapters.HTTPAdapter
# You can increase sds_pool_maxsize if you get errors like
# "Connection pool is full, discarding connection".
#sds_pool_connections=10
#sds_pool_maxsize=10
#sds_max_retries=0

# The list of storage policies that are actually manageable by the Swift gateway
# All of them must exist in the target OpenIO SDS platform, and if they require
# erasure coding support, they must rely on an existing/deployed liberasurecode
#  backend.
oio_storage_policies=SINGLE,EC123,EC64,THREECOPIES,FOURCOPIES

# The configuration to chose the policy when unspecified. All the storage
# policies mentioned here must have been listed in the `oio_storage_policies`
# configuration directive. The string must respect the subsequent format:
#
#  "DEFAULT,POLICY:THRESHOLD[,POLICY:THRESHOLD]*"
#
# Where each token means...
#  "DEFAULT": the storage policy to be used when the size of the content is
#             unknown, with a notable case for 'Transfer-Encoding: chunked'
#             uploads.
#  "POLICY:THRESHOLD": the policy POLICY must be used when the size of the
#                      content is over THRESHOLD.
#
# At least one POLICY:THRESHOLD rule is required. When several tuples are
# present, upon an upload the whole list is iterated and the best match is
# kept as the actual value.
#
# The subsequent configuration tells swift to apply EC12+3 for stream uploads,
# 3 replicas for small files (<256kiB), EC6+4 for medium files (>=256kiB
# and <64MiB) then EC12+3 for large files (>= 64MiB).
auto_storage_policies=EC123,THREECOPIES:0,EC64:262144,EC123:67108864

[pipeline:main]
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache bulk tempurl ratelimit tempauth copy container-quotas account-quotas slo dlo versioned_writes proxy-logging proxy-server

# Pipeline for keystone integration
#pipeline = catch_errors gatekeeper healthcheck proxy-logging cache bulk tempurl ratelimit authtoken keystoneauth copy container-quotas account-quotas slo dlo versioned_writes proxy-logging proxy-server

[app:proxy-server]
use = egg:oioswift#main
allow_account_management = true
account_autocreate = true

# Manage if container should be created if nonexisting
# It must be true if hashedcontainer, regexcontainer, autocontainer or container_hierarchy middleware is used
sds_autocreate = true

[filter:hashedcontainer]
use = egg:oioswift#hashedcontainer

# Generally got from the DEFAULT section, the namespace might be overriden
# here. Use with caution!
#sds_namespace = OPENIO

# Idem, some NS options are required for the filter. The oio-proxy URL used
# generally comes form the DEFAULT section, but it might be overriden here.
# Use with caution!
#sds_proxy_url = http://127.0.0.1:6000

# Generally got from the DEFAULT section, the account might be overriden
# here. Use with caution!
#sds_default_account = myaccount

# Should the server strip the first "v1" token if matched?
# If used in conjunction with 'account_first', 'strip_v1' is applied BEFORE
# false by default
#strip_v1 = false

# Is the OpenIO-SDS account expected as the first token of the URL?
# If used in conjunction with 'strip_v1', 'account_first' is applied AFTER
# false by default
#account_first = false

[filter:regexcontainer]
use = egg:oioswift#regexcontainer

#strip_v1 = false
#account_first = true

# Set this option to true if you use this middleware along with swift3
#swift3_compat = false

# Patterns to apply on incoming URLs to deduce the container name.
# The container name will be the concatenation of captured groups.
# The patterns are sorted, and applied successively until one matches the URL.
# If no pattern matches, an error is returned (see 'failsafe' option).
# You should ensure the last pattern always matches something.
pattern1 = /(\d+)/(\d+)/(\d+)/

# Match anything up to last forward slash, plus any first two hexadecimal
# digits in a URL that has a series of 8 (opportunistic sharding)
pattern8 = ^(.+)/.*?([0-9A-Fa-f]{2})(?=[0-9A-Fa-f]{6})

# "Joker" pattern, match anything up to first forward slash
pattern9 = ^([^/]+)

# By default, try only the first pattern that the URL matches.
# When set to false, if a 404 response is to be returned, try successively
# all other patterns, until a response with any other code is returned.
# If all responses are 404s, return the first one.
# Setting this option to false requires openio-sds >= 4.2.
#stop_at_first_match = true

# If no pattern matches, get/put objects from the 'main' container
# (the one between the 2 '/' after the account name).
#failsafe = false


[filter:autocontainer]
use = egg:oioswift#autocontainer

# Generally got from the DEFAULT section, the account might be overriden
# here. Use with caution!
#sds_default_account = myaccount

# Set this to avoid passing an account name in the url
#default_account = myaccount

# Offset of the first character of the URL that is a number
offset = 6

# Number of characters to use. Let it unset to decode
# up to the first non-digit character.
#size = 10

# Base used to decode the number (10 or 16)
base = 10

# Mask to apply to the number to generate the container name
mask = 0xFFFFFFFFFF0000FF

# How to format the container name (python string format)
format = %016d


[filter:container_hierarchy]
# Spawn containers for each subdirectory, instead of emulating
# directories with '/' in object names. This middleware must be
# placed after authentication in the pipeline.

use = egg:oioswift#container_hierarchy
#log_level = INFO

# These options have the same meaning as in hashedcontainer.
# When using swift3, all 3 must be true.
#strip_v1 = false
#swift3_compat = false
#account_first = false

# Create empty objects to mark subdirectories. This enables
# recursive object listings.
#create_dir_placeholders = false
# When creating subdirectories, force creation of parent directories
#recursive_placeholders = false


[filter:bulk]
use = egg:swift#bulk

[filter:slo]
use = egg:swift#slo

[filter:dlo]
use = egg:swift#dlo

[filter:staticweb]
use = egg:swift#staticweb

[filter:account-quotas]
use = egg:swift#account_quotas

[filter:container-quotas]
use = egg:swift#container_quotas

[filter:versioned_writes]
# Original versioned_writes middleware
#use = egg:swift#versioned_writes
# OpenIO version
use = egg:oioswift#versioned_writes
allow_versioned_writes = true

[filter:crossdomain]
use = egg:swift#crossdomain

[filter:tempauth]
use = egg:swift#tempauth
user_test_tester = testing .admin
user_admin_admin = admin .admin

[filter:gatekeeper]
use = egg:swift#gatekeeper

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:tempurl]
use = egg:swift#tempurl

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:ratelimit]
use = egg:swift#ratelimit

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache
memcache_servers = 127.0.0.1:11211

[filter:swift3]
use = egg:swift3#swift3

[filter:copy]
# Original copy middleware
#use = egg:swift#copy
# OpenIO version
use = egg:oioswift#copy
object_post_as_copy = false
